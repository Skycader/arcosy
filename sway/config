set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme NumixSolarizedDarkCyan
    gsettings set $gnome-schema icon-theme Numix
}
#exec "mako"
exec "makoctl reload"
exec "foot --server"
exec udiskie
#exec "vk"
#exec "kotatogram-desktop"
#exec "chromium --enable-features=UseOzonePlatform --ozone-platform=wayland"
#exec "chromium"
exec "foot"
#exec "firefox"
exec "sleep 10 && vk"
#set $_JAVA_AWT_WM_NONREPARENTING 1
exec sworkstyle &
#Autostart
#exec_always sworkstyle &> /tmp/sworkstyle.log
input "type:keyboard" {
	xkb_layout us,ru
	xkb_options grp:alt_shift_toggle
}

output HDMI-A-1 {
    pos 0 0
    mode 1920x1080@75.002Hz
}

exec autooff
input  5426:153:Razer_Razer_Basilisk_V3 {
   pointer_accel -0.8 
  # accel_profile "adaptive"
}
input 1133:49271:Logitech_USB_Optical_Mouse {
    pointer_accel -0.5
   # accel_profile "flat"
}
#input 7847:102:2.4G_Mouse {
    #tap enabled
    #natural_scroll disabled
    #dwt enabled
#    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
#   pointer_accel -0.2 # set mouse sensitivity (between -1 and 1)
#}

# Hide mouse cursor after a period of inactivity.
seat seat0 hide_cursor 300
input "type:touchpad" tap enabled
assign [app_id="org.telegram.desktop"] workspace number 2
assign [app_id="Kotatogram_Desktop$"] workspace number 2
assign [class="VK"] workspace number 2
#assign [app_id="chromium"] workspace number 3
assign [app_id="firefox"] workspace number 3
exec "sleep 5 && telegram-desktop"
#assign [app_id="foot"] workspace number 1
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term footclient
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --

for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10
for_window [app_id="^floatterminal$"] floating enable, sticky enable, resize set 30 ppt 30 ppt
for_window [app_id="^htop$"] floating enable, resize set 30 ppt 30 ppt
for_window [app_id="^kitty$"] floating enable, resize set 40 ppt 40 ppt
for_window [app_id="^cal2$"] move position cursor, floating enable, sticky enable, resize set 12 ppt 20 ppt, border pixel 2
#bindsym f10 exec "footclient -a launcher /usr/bin/htop"
#set $menu exec alacritty --class=launcher -e /usr/bin/sway-launcher-desktop
#set $menu exec sway-launcher-desktop
set $menu exec footclient -a launcher /usr/bin/sway-launcher-desktop
#exec footclient /usr/bin/sway-launcher-desktop
#bindsym $mod+d exec $menu
#bindsym f9 exec "los"
#bindsym f4 exec "alacritty"
bindsym f7 exec "radiowifitoggle"
bindsym f9 exec "~/.local/bin/lock_off"
bindsym f10 exec "lock_off"
bindsym f11 exec "brightnessctl set 5%-"
bindsym f12 exec "brightnessctl set 5%+"
bindsym f6 exec "screen_toggle"
bindsym $mod+p focus mode_toggle;
bindsym XF86AudioPlay exec "playerctl play-pause"

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * {
        background /home/$USER/Wallpapers/desktop.png fill
}

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    #bindsym $mod+Return exec $term
    #bindsym $mod+x exec footclient
    #bindsym F1 exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    #bindsym F2 exec pactl -- set-sink-volume 0 -10%
    #bindsym F3 exec pactl -- set-sink-volume 0 +10%

    bindsym F3 exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym F2 exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym F1 exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym F8 exec /home/axl/.local/bin/custom/lock_off;
    # Kill focused window
    #bindsym $mod+Shift+q kill
    bindsym --to-code {

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle
    # Swap focus between the tiling area and the floating area
    $mod+space focus mode_toggle

    # Move focus to the parent container
    $mod+t focus parent
	$mod+g focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split
   

    $mod+q kill
    #$mod+d exec $menu
    $mod+a exec footclient
	$mod+Tab exec "footclient -a floatterminal"
    $mod+F fullscreen
    #$mod+c exec grim - | wl-copy
	#$mod+x exec grim "$HOME/screenshots/$(date '+%y%m%d_%H-%M-%S').png"
    Alt+c exec grim -g "$(slurp -d)" - | wl-copy
    $mod+d exec $menu

    $mod+Z focus left
    $mod+X focus right
	$mod+Z+Shift focus down
	$mod+X+Shift focus up
    }
    #bindsym Alt+c exec grim - | wl-copy
    #bindsym $mod+c exec grim -g "$(slurp -d)" - | wl-copy
    #bindsym Alt+q kill
    #bindsym $mod+Ð¹ kill
    bindsym $mod+Shift kill
    # Start your launcher
    #bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right


    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:

bindsym Control_R workspace next

bindsym Alt_R workspace prev
#bindsym $mod+z workspace prev
#bindsym $mod+x workspace next
#v
    # Switch to workspace 
    #bindsym Alt+1 workspace number 1
    #bindsym Alt+2 workspace number 2 
    #bindsym Alt+3 workspace number 3
    #bindsym Alt+4 workspace number 4
    #bindsym Alt+5 workspace number 5
    
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindcode $mod+49 workspace number 0
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    #bindsym $mod+b splith
    #bindsym $mod+v splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    #bindsym $mod+e layout toggle split
   
    # Make the current focus fullscreen
    # bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    #bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    #bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    #bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    #bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

bar {
height 24.5
tray_output none
#Let arrows be smooth:
#font pango:DejaVu Sans Mono, FontAwesome 5 Free 12
#font pango: DejaVu Sans Mono, Font Awesome 5 Free 13
#font pango: NimbusSans Regular, Font Awesome 5 Free 13
#font pango: Font Awesome 5 Free 13
#font pango: LiberationSans-Regular, Font Awesome 5 Free 13
#font pango: NotoSans-Regular, Font Awesome 5 Free 13

#MyFont:
#font pango: Noto Sans,  Font Awesome 5 Free 13
font pango: JetBrainsMono, Font Awesome 5 Free 13
#font pango: Menlo for Powerline, Font Awesome 5 Free 13
#font pango: Nimbus Sans, Font Awesome 5 Free 13
    position top
    status_command /usr/bin/i3status-rs ~/.config/i3status-rust/config.toml
    colors {
        separator #002B36
        background #002B36
        statusline #002B36
        focused_workspace #2AA198 #2AA198 #ffffff
        active_workspace #002B36 #002B36 #ffffff
        inactive_workspace #002B36 #002B36 #888888
#       # urgent_workspace #DC322F #DC322F #ffffff
	urgent_workspace #002B36 #002B36 #888888
    }
}


client.focused #af005f #af005f #000000
client.focused_inactive #3b5998 #3b5998 #3b5998
client.unfocused #5f5faf #5f5faf #000000

default_floating_border pixel 3
default_border pixel 2
smart_gaps on
smart_borders on
gaps inner 5
gaps outer 3
titlebar_border_thickness 0

include /etc/sway/config.d/*
